{"version":3,"file":"static/js/70.ce2fe527.chunk.js","mappings":"gZAEaA,EAAOC,EAAAA,GAAAA,GAAH,8HASJC,EAAOD,EAAAA,GAAAA,GAAH,2DAIJE,EAAQF,EAAAA,GAAAA,IAAH,uNAWLG,EAAQH,EAAAA,GAAAA,EAAH,6HACP,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAOHC,EAAWP,EAAAA,GAAAA,GAAH,2DAIRQ,EAAWR,EAAAA,GAAAA,IAAH,iGAIV,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAGHG,EAAcT,EAAAA,GAAAA,GAAH,mFAMXU,EAASV,EAAAA,GAAAA,GAAH,2IAIU,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAIrBK,EAAaX,EAAAA,GAAAA,KAAH,4C,+JCzDVY,EAAOZ,EAAAA,GAAAA,KAAH,yJASJa,EAAQb,EAAAA,GAAAA,MAAH,gPAII,SAAAI,GAAK,OAAIA,EAAMC,MAAMS,MAAhB,IASdC,EAAef,EAAAA,GAAAA,OAAH,6SAgBZgB,EAAQhB,EAAAA,GAAAA,KAAH,wH,sJCrCLiB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,UAAC,KAAD,CAAMA,SAAUA,EAAhB,WACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,QAAQC,WAAS,EAACC,aAAa,SACvD,SAAC,KAAD,CAAcH,KAAK,SAAnB,UACE,UAAC,KAAD,qBAEE,SAAC,MAAD,CAAUI,MAAO,CAAEC,MAAO,GAAIC,OAAQ,aAK/C,E,wCCXYC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,GAAE,UAAKH,GACPI,MAAO,CAAEC,KAAMR,EAASS,SAAWT,EAASU,QAF9C,WAIE,0BACE,SAAC,KAAD,CACEC,IACEN,EACI,mCAAqCA,EACrC,WAENO,IAAI,aAGR,SAAC,KAAD,UAAQR,QAfDD,EAmBd,KAGN,E,oBCcD,G,QAtCe,WAAO,IAAD,EACjB,GAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA2B3C,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAAqBF,GAArB,iGAE8BG,EAAAA,EAAAA,IAAqBH,EAAMI,QAFzD,YAEcT,EAFd,QAGoBU,OAHpB,uBAIYT,GAAW,OAAID,IAJ3B,0BAOQW,EAAAA,GAAAA,MAAY,sCAPpB,kDAUYA,EAAAA,GAAAA,MAAA,MAVZ,0DADY,wBAcRN,GAdS,SAAD,2BAeRO,CAAMP,EAET,GAAE,CAACA,KAGJ,6BACI,SAAC9B,EAAD,CAAWC,SA3BF,SAAAqC,GACbA,EAAIC,iBACJV,EAAgB,CAAEC,MAAOQ,EAAIE,OAAOV,MAAMW,QAC1CH,EAAIE,OAAOE,OACd,KAwBO,SAACjC,EAAD,CAAYC,OAAQe,MAG/B,E","sources":["components/MoviesList/MoviesList.styled.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","components/MoviesList/SearchList.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 32px) / 3);\n`;\n\nexport const Image = styled.img`\n  margin-bottom: 6px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.p`\n  color: ${props => props.theme.black};\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n`;\n\nexport const CastItem = styled.li`\n  width: calc((100% - 80px) / 5);\n`;\n\nexport const CastInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: ${props => props.theme.black};\n`;\n\nexport const ReviewsInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  border-bottom: 1px solid ${props => props.theme.black};\n  padding-bottom: 8px;\n`;\n\nexport const ReviewInfo = styled.span`\n  font-weight: 400;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  overflow: hidden;\n  margin: 0 auto 12px auto;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 20px;\n  border: 1px solid ${props => props.theme.accent};\n  border-radius: 20px;\n  outline: none;\n  padding-left: 18px;\n  padding-right: 4px;\n  height: 40px;\n  margin-right: 12px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  height: 40px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 0;\n  border-radius: 20px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Label = styled.span`\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n  font: inherit;\n  font-size: 20px;\n`;\n","import { Form, Input, SearchButton, Label } from './Searchbar.styled';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Searchbar = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"query\" autoFocus autoComplete=\"off\" />\n      <SearchButton type=\"submit\">\n        <Label>\n          Search\n          <BsSearch style={{ width: 20, height: 20 }} />\n        </Label>\n      </SearchButton>\n    </Form>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Image, Title } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <Link\n              to={`${id}`}\n              state={{ from: location.pathname + location.search }}\n            >\n              <div>\n                <Image\n                  src={\n                    poster_path\n                      ? 'https://image.tmdb.org/t/p/w500/' + poster_path\n                      : 'No image'\n                  }\n                  alt=\"title\"\n                />\n              </div>\n              <Title>{title}</Title>\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nSearchList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { Searchbar } from '../components/Searchbar/Searchbar';\nimport { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { SearchList } from 'components/MoviesList/SearchList';\nimport { fetchMoviesByKeyWord } from 'services/getMovies';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n    const [results, setResults] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n\n    const onSubmit = evt => {\n        evt.preventDefault();\n        setSearchParams({ query: evt.target.query.value });\n        evt.target.reset();\n    }\n    \n    useEffect(() => {\n        async function fetch(query) {\n            try {\n                const results = await fetchMoviesByKeyWord(query.trim());\n                if (results.length) {\n                    setResults([...results]);\n                    return;\n                }\n                toast.error('No movies found. Try one more time');\n            }\n                catch (error) {\n                    toast.error(error)\n                }\n        }\n        if (query) {\n            fetch(query);\n        }\n        }, [query])\n\n    return (\n        <main>\n            <Searchbar onSubmit={onSubmit}  />\n            <SearchList movies={results} />\n        </main>\n    )\n}\n\nexport default Movies;"],"names":["List","styled","Item","Image","Title","props","theme","black","CastItem","CastInfo","ReviewsInfo","Review","ReviewInfo","Form","Input","accent","SearchButton","Label","Searchbar","onSubmit","type","name","autoFocus","autoComplete","style","width","height","SearchList","movies","location","useLocation","map","id","title","poster_path","to","state","from","pathname","search","src","alt","useState","results","setResults","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesByKeyWord","trim","length","toast","fetch","evt","preventDefault","target","value","reset"],"sourceRoot":""}