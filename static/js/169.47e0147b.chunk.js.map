{"version":3,"file":"static/js/169.47e0147b.chunk.js","mappings":"iZAEaA,EAAOC,EAAAA,GAAAA,GAAH,8HASJC,EAAOD,EAAAA,GAAAA,GAAH,2DAIJE,EAAQF,EAAAA,GAAAA,IAAH,uNAWLG,EAAQH,EAAAA,GAAAA,EAAH,6HACP,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAOHC,EAAWP,EAAAA,GAAAA,GAAH,2DAIRQ,EAAWR,EAAAA,GAAAA,IAAH,iGAIV,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAGHG,EAAcT,EAAAA,GAAAA,GAAH,mFAMXU,EAASV,EAAAA,GAAAA,GAAH,2IAIU,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,IAIrBK,EAAaX,EAAAA,GAAAA,KAAH,4C,8LCzDVY,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,SAAC,KAAD,UACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAAC,KAAD,YACE,UAAC,KAAD,4BACe,SAAC,KAAD,UAAaD,QAE5B,UAAC,KAAD,uBACU,SAAC,KAAD,UAAaC,SALZF,EAShB,KAGN,ECoBD,EA/BgB,WACZ,IAAQA,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE8BC,EAAAA,EAAAA,IAAaT,GAF3C,QAEcF,EAFd,QAGoBY,SACRL,GAAW,OAAIP,IACfS,GAAY,IALxB,gDAQII,EAAAA,GAAAA,MAAY,sCARhB,0DADY,uBAAC,WAAD,wBAYZC,EACH,GAAE,CAACZ,IAEAM,GAEI,8BACI,SAACT,EAAD,CAAaC,QAASA,OAIvB,SAAC,KAAD,wDAEd,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/Reviews.js","pages/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 32px) / 3);\n`;\n\nexport const Image = styled.img`\n  margin-bottom: 6px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.p`\n  color: ${props => props.theme.black};\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n`;\n\nexport const CastItem = styled.li`\n  width: calc((100% - 80px) / 5);\n`;\n\nexport const CastInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: ${props => props.theme.black};\n`;\n\nexport const ReviewsInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  border-bottom: 1px solid ${props => props.theme.black};\n  padding-bottom: 8px;\n`;\n\nexport const ReviewInfo = styled.span`\n  font-weight: 400;\n`;\n","import { ReviewsInfo, Review, Title, ReviewInfo } from './MoviesList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ReviewsInfo>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <Review key={id}>\n            <Title>\n              Author name: <ReviewInfo>{author}</ReviewInfo>\n            </Title>\n            <Title>\n              Review: <ReviewInfo>{content}</ReviewInfo>\n            </Title>\n          </Review>\n        );\n      })}\n    </ReviewsInfo>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchReviews } from \"services/getMovies\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ReviewsList } from \"components/MoviesList/Reviews\";\nimport { Title } from \"components/MoviesList/MoviesList.styled\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        async function getReviews() {\n            try {\n                const reviews = await fetchReviews(id);\n                if (reviews.length) {\n                    setReviews([...reviews]);\n                    setIsLoaded(true);\n                }\n        } catch (error) {\n            toast.error('We can`t find reviews of this film');\n        }\n        }\n        getReviews();\n    }, [id])\n    \n    if (isLoaded) {\n        return (\n            <section>\n                <ReviewsList reviews={reviews} />\n            </section>\n        )\n    } else {\n        return(<Title>Sorry, there are no reviews for this movie</Title>)\n    }\n}\n\nexport default Reviews;\n"],"names":["List","styled","Item","Image","Title","props","theme","black","CastItem","CastInfo","ReviewsInfo","Review","ReviewInfo","ReviewsList","reviews","map","id","author","content","useParams","useState","setReviews","isLoaded","setIsLoaded","useEffect","fetchReviews","length","toast","getReviews"],"sourceRoot":""}